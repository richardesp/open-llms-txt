name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  checks-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Install mise
        shell: bash
        run: |
          set -euxo pipefail
          curl -sSL https://mise.run | sh
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          mise --version
          uv --version
          python --version

      - name: Cache uv cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-cache-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-cache-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-
            uv-cache-${{ runner.os }}-

      - name: Cache .venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-
            venv-${{ runner.os }}-

      - name: Run checks
        run: mise run check
        env:
          UV_PROJECT_ENVIRONMENT: .venv

      - name: Run tests
        run: mise run tests
        env:
          UV_PROJECT_ENVIRONMENT: .venv
